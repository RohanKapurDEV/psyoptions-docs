"use strict";(self.webpackChunkpsyoptions_docs=self.webpackChunkpsyoptions_docs||[]).push([[352],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},y=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),y=u(n),m=i,d=y["".concat(c,".").concat(m)]||y[m]||p[m]||o;return n?r.createElement(d,a(a({ref:e},l),{},{components:n})):r.createElement(d,a({ref:e},l))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=y;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9225:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(8782),i=n(1251),o=(n(7294),n(3905)),a={id:"javascript-gists",title:"TypeScript Gists",sidebar_label:"Gists",slug:"/client-integration/javascript/gists"},s="Initialize PsyOptions Market",c={unversionedId:"javascript-gists",id:"javascript-gists",isDocsHomePage:!1,title:"TypeScript Gists",description:"``TypeScript",source:"@site/docs/javascript-gists.md",sourceDirName:".",slug:"/client-integration/javascript/gists",permalink:"/zh/client-integration/javascript/gists",editUrl:"https://github.com/mithraiclabs/psyoptions-docs/tree/master/docs/javascript-gists.md",tags:[],version:"current",frontMatter:{id:"javascript-gists",title:"TypeScript Gists",sidebar_label:"Gists",slug:"/client-integration/javascript/gists"}},u=[],l={toc:u};function p(t){var e=t.components,n=(0,i.Z)(t,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"initialize-psyoptions-market"},"Initialize PsyOptions Market"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-TypeScript"},"const initializeMarket = async (\n  /** the keypair of the wallet creating the market */\n  wallet: Keypair,\n  /** The full underlying amount per contract **including the quote asset decimal places** */\n  underlyingAmountPerContract: BigNumber,\n  /** The full quoteAmountPerContract **including the quote asset decimal places** */\n  quoteAmountPerContract: BigNumber,\n  /** The public key for the underlying asset mint */\n  underlyingAssetMintKey: PublicKey,\n  /** The public key for the quote asset mint */\n  quoteAssetMintKey: PublicKey,\n  /* The unix time stamp for the contract expiration **in seconds** */\n  expirationUnixTimestamp: number,\n) => {\n  // Create and send transaction for creating/initializing accounts needed\n  // for option market\n  const {\n    transaction: createAccountsTx,\n    signers,\n    optionMintKey,\n    writerTokenMintKey,\n    quoteAssetPoolKey,\n    underlyingAssetPoolKey,\n  } = await initializeAccountsForMarket({\n    connection,\n    payerKey: wallet.publicKey,\n    programId,\n  })\n  await connection.sendTransaction(createAccountsTx, signers)\n\n  // create and send transaction for initializing the option market\n  const initializeMarketIx = await initializeMarketInstruction({\n    programId,\n    fundingAccountKey: wallet.publicKey,\n    underlyingAssetMintKey,\n    quoteAssetMintKey,\n    optionMintKey,\n    writerTokenMintKey,\n    underlyingAssetPoolKey,\n    quoteAssetPoolKey,\n    underlyingAmountPerContract: underlyingAmountPerContract.toNumber(),\n    quoteAmountPerContract: quoteAmountPerContract.toNumber(),\n    expirationUnixTimestamp,\n  })\n  const transaction = new Transaction()\n  transaction.add(initializeMarketIx)\n  await connection.sendTransaction(transaction, [])\n  const [optionMarketKey] = await Market.getDerivedAddressFromParams({\n    programId,\n    underlyingAssetMintKey,\n    quoteAssetMintKey,\n    underlyingAmountPerContract: underlyingAmountPerContract.toNumber(),\n    quoteAmountPerContract: quoteAmountPerContract.toNumber(),\n    expirationUnixTimestamp,\n  })\n  return optionMarketKey\n}\n")))}p.isMDXComponent=!0}}]);